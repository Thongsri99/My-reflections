--What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?How did viewing a diff between two versions of a file help you see the bug that was introduced?

I can immediately see how valuable version control can be.  
Working on large projects such as the game that was introduced 
can make it obvious how daunting a task it would be if there was a small problem 
such as a simple typo.

Using the diff tool in windows was a big help.

-FC file1 file 2


--How could having easy access to the entire history of a file make you a more efficient programmer in the long term?


Having easy access to the entire history of a file can make one a more efficient programmer in many ways.

One way that it allows me to become a more efficient programmer is being able to make changes to old programs.  
By having access to my old programs, i can quickly see how i used to code before and now i can see what would make that code more efficient.
Version control is a great tool that would greatly improve my programming skills.

Another way it could help is if i do not like a set of changes that ive made and i would like to start from a different point.
Instead of completly restarting my code, i can revert back to an old save point which would be much more efficient than simply restarting my code.

--What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

-Cons
User error
commits are too large or too big


-Pros
Can control the size of the commit
possibly more logical commits

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Google docs and git are used for different purposes.  For google docs, it makes more sense to treat each file sperately and for git, it makes sense to treat 
files the same as some projects may use multiple files.

--How can you use the commands git log and git diff to view the history of files?

I can use git log to see all the commits that have been posted along with user comments.  Use Q to exit and arrow keys to scroll through the commits. 

I can use git Diff to compare two files easily.  Use Q to exit and arrow keys to scroll.

--How might using version control make you more confident to make changes that could break something?

With a system of version control, i can confidently make changes and know that i can easily revert back to an older state.
